package com.Instagram_clone.Instagram_clone.AwsConfig;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import software.amazon.awssdk.auth.credentials.AwsBasicCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.presigner.S3Presigner;

@Configuration
public class AwsConfig {

    // @Value роЗройрпНроЬрпЖроХрпНро╖ройрпНроХро│рпН - роЗро╡рпИ роЕрокрпНрокроЯро┐ропрпЗ роЗро░рпБроХрпНроХроЯрпНроЯрпБроорпН
    @Value("${cloud.aws.credentials.access-key}")
    private String ACCESS_KEY;

    @Value("${cloud.aws.credentials.secret-key}")
    private String SECRET_KEY;

    @Value("${cloud.aws.region.static}")
    private String REGION;

    // ЁЯСЗ 1. StaticCredentialsProvider Bean: роЗродрпБродро╛ройрпН роорпБроХрпНроХро┐ропроорпН!
    @Bean
    public StaticCredentialsProvider credentialsProvider() {
        return StaticCredentialsProvider.create(
            AwsBasicCredentials.create(ACCESS_KEY, SECRET_KEY)
        );
    }

    // ЁЯСЗ 2. S3Client Bean: роТро░рпЗ роТро░рпБ роорпБро▒рпИ, роЙро│рпНро│рпАроЯрпНроЯрпИ роПро▒рпНроХро┐ро▒родрпБ (Line 25 роорпБродро▓рпН 38 ро╡ро░рпИ роЙро│рпНро│ рооро▒рпНро▒ s3client роорпБро▒рпИроХро│рпИ роирпАроХрпНроХ ро╡рпЗрогрпНроЯрпБроорпН)
    @Bean
    public S3Client s3client(StaticCredentialsProvider credentialsProvider) {
        return S3Client.builder()
                .region(Region.of(REGION))
                .credentialsProvider(credentialsProvider) // DI роорпВро▓роорпН рокрпЖро▒рокрпНрокроЯрпНроЯродрпБ
                .build();
    }

    // ЁЯСЗ 3. S3Presigner Bean: роТро░рпЗ роТро░рпБ роорпБро▒рпИ, роЙро│рпНро│рпАроЯрпНроЯрпИ роПро▒рпНроХро┐ро▒родрпБ (Line 40 роорпБродро▓рпН 51 ро╡ро░рпИ роЙро│рпНро│ рооро▒рпНро▒ s3Presigner роорпБро▒рпИроХро│рпИ роирпАроХрпНроХ ро╡рпЗрогрпНроЯрпБроорпН)
    @Bean
    public S3Presigner s3Presigner(StaticCredentialsProvider credentialsProvider) {
        return S3Presigner.builder()
                .region(Region.of(REGION))
                .credentialsProvider(credentialsProvider) // DI роорпВро▓роорпН рокрпЖро▒рокрпНрокроЯрпНроЯродрпБ
                .build();
    }
}